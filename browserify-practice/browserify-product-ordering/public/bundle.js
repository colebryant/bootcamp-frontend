(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// This module builds the navigation bar and appends it to the DOM when called
const Nav = {
  buildNavbar() {
    const navContainer = document.createElement("nav");
    navContainer.classList.add("navBar");
    const navList = document.createElement("ul");
    navContainer.appendChild(navList);
    const companyItem = document.createElement("li");
    companyItem.innerHTML = '<a class = "navItem companyItem" href="#">Betsy</a>';
    const navLink1 = document.createElement("li");
    navLink1.innerHTML = '<a class = "navItem" href="#">Categories</a>';
    const navLink2 = document.createElement("li");
    navLink2.innerHTML = '<a class = "navItem" href="#">Orders</a>';
    const navLink3 = document.createElement("li");
    navLink3.innerHTML = '<a class = "navItem" href="#">Logout</a>';
    navList.appendChild(companyItem);
    navList.appendChild(navLink1);
    navList.appendChild(navLink2);
    navList.appendChild(navLink3);
    const output = document.querySelector(".output");
    output.appendChild(navContainer);
  }

};
var _default = Nav;
exports.default = _default;

},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ReviewList = _interopRequireDefault(require("./ReviewList"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// This module creates the product components which contain the product's title, sections for the other items and the review from the ReviewList module
const Product = {
  buildProduct(productObject) {
    let productContainer = document.createElement("section");
    productContainer.classList.add("productContainer");
    let pieContainer = document.createElement("section");
    pieContainer.classList.add("pieContainer");
    let title = document.createElement("h2");
    title.textContent = productObject.productName;
    let imageItem = document.createElement("img");
    imageItem.classList.add("pieImage");
    imageItem.setAttribute("src", productObject.imageUrl);
    imageItem.setAttribute("alt", productObject.productName);
    let details = document.createElement("ul");
    let description = document.createElement("li");
    description.textContent = productObject.productDescription;
    let price = document.createElement("li");
    price.textContent = `Price: ${productObject.productPrice} per pie`;
    let quantity = document.createElement("li");
    quantity.textContent = `Remaining Inventory: ${productObject.productQuantity}`;
    let reviewsContainer = document.createElement("article");
    reviewsContainer.classList.add("pieReviews", `pieReview${productObject.id}`);

    _ReviewList.default.fillReviewComponents(productObject);

    pieContainer.appendChild(title);
    pieContainer.appendChild(imageItem);
    details.appendChild(description);
    details.appendChild(price);
    details.appendChild(quantity);
    pieContainer.appendChild(details);
    productContainer.appendChild(pieContainer);
    productContainer.appendChild(reviewsContainer);
    return productContainer;
  }

};
var _default = Product;
exports.default = _default;

},{"./ReviewList":7}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// This module fetches the product data from the API
const ProductData = {
  getProductData() {
    return fetch("http://localhost:8088/products").then(response => response.json());
  }

};
var _default = ProductData;
exports.default = _default;

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Product = _interopRequireDefault(require("./Product"));

var _ProductData = _interopRequireDefault(require("./ProductData"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// This module creates the DOM component for the list of products and then appends them to the DOM when called
const ProductList = {
  appendProductComponents() {
    _ProductData.default.getProductData().then(parsedResponse => {
      let productsFragment = document.createDocumentFragment();
      parsedResponse.forEach(productObject => {
        let productComponent = _Product.default.buildProduct(productObject);

        productsFragment.appendChild(productComponent);
      });
      let output = document.querySelector(".output");
      output.appendChild(productsFragment);
    });
  }

};
var _default = ProductList;
exports.default = _default;

},{"./Product":2,"./ProductData":3}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// This module creates the review component to be appended to the DOM
const Review = {
  createReviewComponent(reviewObject) {
    let docuFrag = document.createDocumentFragment();
    let reviewTitle = document.createElement("h3");
    reviewTitle.textContent = `Review: ${reviewObject.reviewTitle}`;
    let reviewText = document.createElement("p");
    reviewText.textContent = reviewObject.reviewText;
    docuFrag.appendChild(reviewTitle);
    docuFrag.appendChild(reviewText);
    let reviewOutput = document.querySelector(`.pieReview${reviewObject.productId}`);
    reviewOutput.appendChild(docuFrag);
  }

};
var _default = Review;
exports.default = _default;

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// This module fetches the review data from the API
const ReviewData = {
  getReviewData() {
    return fetch("http://localhost:8088/reviews").then(response => response.json());
  }

};
var _default = ReviewData;
exports.default = _default;

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ReviewData = _interopRequireDefault(require("./ReviewData"));

var _Review = _interopRequireDefault(require("./Review"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ReviewList = {
  fillReviewComponents(productObject) {
    _ReviewData.default.getReviewData().then(parsedResponse => {
      parsedResponse.forEach(review => {
        if (review.productId === productObject.id) {
          _Review.default.createReviewComponent(review);
        }
      });
    });
  }

};
var _default = ReviewList;
exports.default = _default;

},{"./Review":5,"./ReviewData":6}],8:[function(require,module,exports){
"use strict";

var _Nav = _interopRequireDefault(require("./Nav"));

var _ProductList = _interopRequireDefault(require("./ProductList"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import ProductList from "./ProductList";
_Nav.default.buildNavbar();

_ProductList.default.appendProductComponents();

},{"./Nav":1,"./ProductList":4}]},{},[8])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
